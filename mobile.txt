1．移动端与PC端的差异：
	1．1交互方式
		移动端：点击，滑动，重力感应，手势，长按等
		PC端：鼠标事件，键盘事件，拖拽事件等
	1．2分辨率
		移动端 ：安卓手机屏幕大多采用物理像素屏幕（px），iPhone则采用的是视网膜屏（retain屏），而且retain屏有2倍屏（dpi）与3倍屏的区分。
		PC端：大部分PC设备采用的是物理像素屏幕（px）
		关于分辨率
			iPhone：960*640（iPhone4/4s）、1136*640（iPhone5/5s）、1334*750（iPhone6）、1920*1080（iPhone6 Plus）等
			Android：480x800, 480x854, 540x960, 720x1280, 1080x1920 等
	1．3开发规范
		移动端 ：没有约定俗成的规范；
		PC端	：根据设计稿，设置固定版心宽度（或旧式台式机屏宽980px），居中在屏幕显示。或通栏显示。

2．移动端开发
	2．1 单位介绍
		Px : 物理像素值，固定单位；
		%：百分比值，相对于父级的相对属性的百分比；
		Em： 如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸；
		Rem（font size of the root element） : 相对于根元素（html）的字体大小的单位；
		Vw / Vh：可视浏览器的宽度与高度；
	2．2布局介绍
		流式布局：通过 % 布局（移动端课程内容介绍）；
		Rem布局：使用rem作为单位布局；
		Flex布局：使用css3弹性布局；
具体使用哪种方案，根据项目的实际情况决定。

3．开发注意事项
	3．1各手机浏览器的兼容测试（如微信内置浏览器，UC浏览器，3Q浏览器等）
	3．2底层服务的调用
	3．3注意离线数据存储，减少数据请求频率
	3．4用户的数据存储
	3．5 css3动画效果与浏览器的交互冲突

4．移动web与移动H5？
	通俗的讲，一个是Web App，一个是手机PPT。

5．Web App 与Native App ？

6.兼容性
	在国内的移动web浏览器，绝大部分都是基于webkit内核的，所以一些css3效果，h5的新特性绝大部分都被支持，需要添加前缀。
	（不同机型之间可能会略有不同，这个需要踩坑）

7.移动web对比PC布局的差异性
	移动web的主要核心就是做自适应的布局，在手持设备上基本都是通栏的，并且布局的细节比PC端少，文字内容和模块也相对偏少

8.流式布局
	其实  流式布局  就是百分比布局。是移动web开发使用的常用布局方式之一
		流式布局下的几个页面特征：
		（1）宽度自适应，高度写死，不能百分百去还原设计图
		（2）一些小ICON 图标等都是写死的 不是所有的东西都是自适应的，一般都是模块会呈现自适应
		（3）一些产品插入图 也就是img等都默认设置宽度百分百，让其自动保持等比例缩放，一般不予写死
		（4）字体大小等都是写死的

9.rem结合流式布局的写法：使用rem去计算高度，百分比去计算宽度，实现宽高完全自适应。

10.移动端的几个经典的页面模块布局
（1）左侧固定 右侧自适应
	  左侧盒子直接写死宽高，并且浮动
	  右侧盒子直接不写宽，直接用margin-left去挤出距离，这个盒子默认会自动内减
（2）圣杯布局
		/* 两侧固定 中间自适应 */
		左右的盒子都写固定的宽高，然后分别左浮动 右浮动
		中间的盒子直接用margin去挤出距离，不写宽自动内减
		右边浮动在结构（html里面）一定要放到标准流盒子的前面
（3）右侧固定，左侧自适应
		右侧盒子直接写死宽高，并且浮动
		左侧盒子直接不写宽，直接用margin-left去挤出距离，这个盒子默认会自动内减
		右侧盒子在结构上在左侧盒子的前面，先浮动，后标准
（4）中间固定，两边自适应
		中间盒子直接写死宽高，并且定位居中
		左右侧盒子直接width百分50%，并且浮动，并配合padding和内减去实现自适应		
（5）等分布局，就是百分比平分

11.Viewport（视口）
	视口标签的参数： 
		width：宽度设置的是viewport宽度，可以设置device-width特殊值
		initial-scale：初始缩放比，大于0的数字（缩放是基于屏幕来的）
		maximum-scale：最大缩放比，大于0的数字
		minimum-scale：最小缩放比，大于0的数字
		user-scalable：用户是否可以缩放，yes或no（1或0）； 
		用meta标签把viewport的宽度设为device-width，同时initial-scale=1，user-scalable = 0就构建了一个标准的移动web页面 

12.首页切图
	注意事项：
		一般设计图都是640 或者750 甚至更大，我们不能直接用这样的设计图去量尺寸，因为高度不准（除非量了之后手动去计算，但是会很麻烦），所以需要将设计图缩放到320的大小下面去进行量尺寸（但是真正的图片元素还是在之前的原始设计图下去切，因为这样不会失真）
		320仅仅是用来量高度的

	关于精灵图的缩放：
		因为精灵图都是根据原始设计图的大小切出来的，所以，在流式布局里面使用精灵图的都需要用background-size缩放，至于缩放的比例(用原始设计图的分辨率/320)，缩放之后取得对应图片的background-position （千万别真把精灵图给缩放给保存了，我们缩放精灵图仅仅是用来获取缩放后的精灵图的position）
		没有宽度的盒子写padding不会撑大盒子
		
	如果1：1的显示在移动设备当中  图标会失真
	在行业中通用的设计稿 640px
	目的  熟练的时候百分比布局
	首页的布局：是以百分比布局为主的  定最小宽度和最大宽度的布局。
	适用：图片比较多的首页，门户，电商 等。

13.移动端事件
	Touch事件
	（1）touchstart：当手指触碰屏幕时候发生。不管当前有多少只手指
	（2）touchmove：当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，
					会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动
	（3）touchend：当手指离开屏幕时触发
	（4）touchcancel：系统停止跟踪触摸时候会触发。
					  例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用
	触摸事件的响应顺序
		1、ontouchstart
		2、ontouchmove
		3、ontouchend
		4、onclick  300ms延时

	Event
		originalEvent （原生事件） 是jquery 封装的事件。
		targetTouches 目标元素的所有当前触摸 
		changedTouches 页面上最新更改的所有触摸，在touchend里面触发，只有touchend的才可以获取event手指坐标
		touches 页面上的所有触摸
		注意：在touchend事件的时候event只会记录changedtouches


14. 响应式的概念
		定义；就是一个网站能够兼容多个终端（屏幕）
		终端：pc  手机  ipad  等...

15.响应式网站和传统pc端之间的一个差异性
	差异性：
		（1）内容差异（响应式网站内容相对较少，而pc端相对较多）
		（2）布局上的差异（响应式的布局较为简单，而pc端布局较为复杂）
		（3）兼容性上的差异（响应式网站兼容会较差，而pc端没有兼容问题）注明：这个兼容说的是浏览器的兼容
	从设计的角度来考虑 ：移动优先
	从代码的角度来考虑，先大后小，针对一些不同的css利用媒体查询去做调整

16.媒体查询
	作用：针对不同的屏幕大小链接不同的css样式
	（1.1）外链式媒体查询
			说明：是直接在html文件里面用link标签配合media属性实现媒体查询
			<link rel="stylesheet" href="red.css" media="(min-width:980px)">
			<link rel="stylesheet" href="green.css" media="(max-width:979px) and (min-width:540px)">
			<link rel="stylesheet" href="blue.css" media="(max-width:539px)">
			说明：
			（1）px后面一定不能跟分号
			（2）区间与区间之间用and关键字链接，前后必须要有空格
	（1.2）迭代式写法
		上述写法有几个个弊端:
			每一个css都是独立的，修改起来不方便 
			css太多了，请求就多了，不利于优化 
			最重要的是响应式网站一般都是大布局不动，在不同大小的屏幕上去调整位置，或者显示和隐藏一些模块，所以大部分的原始的css都是需要的，只是需要针对不同的屏幕做一些小的调整，而这种写法会导致我们的每一个css都需要把重复的模块复制一份，所以我们更推荐迭代式写法 

		小技巧：先写最大范围的css，然后用小范围的css去覆盖掉一些我们要修改的css
	（1.3）内嵌式迭代写法 
			写在css里面 利用media关键字实现媒体查询
			@media (判断条件) {
				css语句
			}

17.Bootstrap
	栅格化（自动响应式）
	什么时候运用？
		（1）没有设计图的时候 只有原型图
		（2）项目比较赶
		（3）制作一些简约类型的网站的时候，跟bootstrap提供的风格很类似的时候的网站可以去运用
		（4）不适合一些定制类的网站，或者一些复杂的网站，例如电商这种的，更适合做一些企业站或者后台管理系统界面
	栅格参数:
		栅格化布局本质上就是把整个页面分成12列（单位），在不同的屏幕大小上占不同的单位，如果排列不下，就另起一行排列


18.Rem
	这个单位是一个相对单位，相对的是Html的字体大小
	Rem的宽高自适应原理：
		rem单位都是基于Html的字体大小，在不同的屏幕下面，修改html的字体大小就可以实现自适应效果
	小建议：使用rem宜小不宜大，尽量使用固定+自适应，少用盒子与盒子之间浮动
	REM的公式 ： 设计图的大小/自己自定义的html的font-size（推荐使用40）= 改变后的屏幕大小/这个屏幕对应的font-size值

19.移动端常见兼容性问题
	1. IOS移动端click事件300ms的延迟响应
		解决方案：
			fastclick可以解决在手机上点击事件的300ms延迟
			zepto的touch模块，tap事件也是为了解决在click的延迟问题
			触摸事件的响应顺序为 touchstart --> touchmove --> touchend --> click,也可以通过绑定ontouchstart事件，加快对事件的响应，解决300ms延迟问题

	2.一些情况下对非可点击元素如(label,span)监听click事件，ios下不会触发，css增加cursor:pointer就搞定了。

	3. 三星手机遮罩层下的input、select、a等元素可以被点击和focus(点击穿透)
		首先需求是浮层操作，在三星上被遮罩的元素依然可以获取focus、click、change)，有两种解决方案，
			1.是通过层显示以后加入对应的class名控制，截断显示层下方可获取焦点元素的事件获取
			2.是通过将可获取焦点元素加入的disabled属性，也可以利用属性加dom锁定的方式（disabled的一种变换方式）

	4. h5底部输入框被键盘遮挡问题
		当输入框在最底部，点击软键盘后输入框会被遮挡。可采用如下方式解决
		复制代码
		var oHeight = $(document).height(); //浏览器当前的高度
		   
		   $(window).resize(function(){
		 
		        if($(document).height() < oHeight){
		         
		        $("#footer").css("position","static");
		    }else{
		         
		        $("#footer").css("position","absolute");
		    }
		        
		   });
		  关于Web移动端Fixed布局的解决方案，这篇文章也不错

		http://efe.baidu.com/blog/mobile-fixed-layout/

	更多兼容性问题看大牛经验分享的收藏